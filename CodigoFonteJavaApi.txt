#configurando usu√°rio do banco
spring.datasource.username=root

#Configurando a senha
spring.datasource.password=mysql

#Configurando a base de dados
spring.datasource.url=jdbc:mysql://localhost:3306/projetoback?useTimezone=true&serverTimezone=UTC

#Configurando dialeto
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

package com.javabank.power.model;

import javax.persistence.*;
@Entity
@Table(name = "tbprojeto")
public class BaseConta {
@Id
@Column(name = "numero")
private int numero;
@Column(name = "agencia")
private int agencia;
@Column(name = "tipo")
private int tipo;
@Column(name = "saldo")
private double saldo;
@Column(name = "titular", length = 50)
private String titular;
public int getNumero() {
	return numero;
}
public void setNumero(int numero) {
	this.numero = numero;
}
public int getAgencia() {
	return agencia;
}
public void setAgencia(int agencia) {
	this.agencia = agencia;
}
public int getTipo() {
	return tipo;
}
public void setTipo(int tipo) {
	this.tipo = tipo;
}
public double getSaldo() {
	return saldo;
}
public void setSaldo(double d) {
	this.saldo = d;
}
public String getTitular() {
	return titular;
}
public void setTitular(String titular) {
	this.titular = titular;
}

}

package com.javabank.power.dto;

public class BaseContaDto {
private int numero;
private int agencia;
private int tipo;
private double saldo;
private String titular;



public BaseContaDto() {
}

public BaseContaDto(int numero, int agencia, int tipo, double saldo, String titular) {
	this.numero = numero;
	this.agencia = agencia;
	this.tipo = tipo;
	this.saldo = saldo;
	this.titular = titular;
}

public int getNumero() {
	return numero;
}
public void setNumero(int numero) {
	this.numero = numero;
}
public int getAgencia() {
	return agencia;
}
public void setAgencia(int agencia) {
	this.agencia = agencia;
}
public int getTipo() {
	return tipo;
}
public void setTipo(int tipo) {
	this.tipo = tipo;
}
public double getSaldo() {
	return saldo;
}
public void setSaldo(double saldo) {
	this.saldo = saldo;
}
public String getTitular() {
	return titular;
}
public void setTitular(String titular) {
	this.titular = titular;
}

}

package com.javabank.power.dto;

public class OperacaoSaldoDto {
private double saldo;

public OperacaoSaldoDto() {

}

public OperacaoSaldoDto(double saldo) {
	this.saldo = saldo;
}

public double getSaldo() {
	return saldo;
}

public void setSaldo(double saldo) {
	this.saldo = saldo;
}

}

package com.javabank.power.dao;

import org.springframework.data.repository.CrudRepository;

import com.javabank.power.model.BaseConta;

public interface BaseContaDao extends CrudRepository<BaseConta, Integer>{

}

package com.javabank.power.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.javabank.power.dao.BaseContaDao;
import com.javabank.power.dto.BaseContaDto;
import com.javabank.power.dto.OperacaoSaldoDto;
import com.javabank.power.model.BaseConta;


@RestController
public class BaseContaController {
	@Autowired
	private BaseContaDao dao;

	@GetMapping("/contas")
	public List<BaseConta> listarContas() {
		return (List<BaseConta>) dao.findAll();
	}

	@GetMapping("/contas/{numero}")
	public BaseConta listarPeloNumero(@PathVariable int numero) {
		return dao.findById(numero).orElse(null);
	}

	@GetMapping("/contas/saldo/{numero}")
	public OperacaoSaldoDto consultarSaldo(@PathVariable int numero) {
		OperacaoSaldoDto consultaOperacao = new OperacaoSaldoDto();
		BaseConta conta = listarPeloNumero(numero);
		consultaOperacao.setSaldo(conta.getSaldo());
		return consultaOperacao;
	}

	@PostMapping("/contas")
	public void cadastrarConta(@RequestBody BaseConta cadastrar) {
		dao.save(cadastrar);
	}

@PostMapping("/contas/deposito/{numero}")
public void depositarValor(@RequestBody OperacaoSaldoDto depositarValor, @PathVariable int numero) {
BaseConta conta = listarPeloNumero(numero);
conta.setSaldo(conta.getSaldo() + depositarValor.getSaldo());
dao.save(conta);
}

@GetMapping("/contas/saque/{numero}")
public void sacarValor(@RequestBody BaseContaDto sacar) {

}

}
